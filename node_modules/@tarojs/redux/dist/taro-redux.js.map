{"version":3,"file":"taro-redux.js","sources":["../src/utils/store.js","../src/utils/index.js","../src/connect/connect.js","../src/connect/Provider.js","../src/hooks/context.js","../src/hooks/use-redux-context.js","../src/hooks/use-store.js","../src/hooks/use-dispatch.js","../src/utils/batch.js","../src/utils/subscription.js","../src/utils/invariant.js","../src/hooks/use-selector.js","../src/index.js"],"sourcesContent":["let store = null\nconst appGlobal = global || {}\nconst globalRef = Object.getPrototypeOf(appGlobal) || appGlobal\nexport function getStore () {\n  if (process.env.TARO_ENV === 'quickapp') {\n    return globalRef.store || null\n  } else if (process.env.TARO_ENV === 'alipay') {\n    return my.taroReduxStore || null\n  }\n  return store\n}\n\nexport function setStore (arg) {\n  if (process.env.TARO_ENV === 'quickapp') {\n    globalRef.store = arg\n  } else if (process.env.TARO_ENV === 'alipay') {\n    my.taroReduxStore = arg\n  } else {\n    store = arg\n  }\n}\n","export function isObject (arg) {\n  return arg != null && typeof arg === 'object' && !Array.isArray(arg)\n}\n\nexport function mergeObjects (obj1, obj2) {\n  const result = Object.assign({}, obj1)\n  if (isObject(obj1) && isObject(obj2)) {\n    for (const p in obj2) {\n      if (isObject(obj1[p]) && isObject(obj2[p])) {\n        result[p] = mergeObjects(obj1[p], obj2[p])\n      } else {\n        result[p] = obj2[p]\n      }\n    }\n  }\n  return result\n}\n","import { getStore } from '../utils/store'\nimport { mergeObjects, isObject } from '../utils'\n\nfunction wrapPropsWithDispatch (mapDispatchToProps, dispatch) {\n  if (typeof mapDispatchToProps === 'function') {\n    return mapDispatchToProps(dispatch)\n  }\n\n  if (isObject(mapDispatchToProps)) {\n    return Object.keys(mapDispatchToProps)\n      .reduce((props, key) => {\n        const actionCreator = mapDispatchToProps[key]\n        if (typeof actionCreator === 'function') {\n          props[key] = (...args) => dispatch(actionCreator(...args))\n        }\n        return props\n      }, {})\n  }\n\n  return {}\n}\n\nexport default function connect (mapStateToProps, mapDispatchToProps) {\n  const store = getStore()\n  const dispatch = store.dispatch\n  const initMapDispatch = wrapPropsWithDispatch(mapDispatchToProps, dispatch)\n  initMapDispatch.dispatch = dispatch\n\n  const stateListener = function () {\n    let isChanged = false\n    const newMapState = mapStateToProps(store.getState(), this.props)\n    const prevProps = Object.assign({}, this.props)\n    Object.keys(newMapState).forEach(key => {\n      let val = newMapState[key]\n      if (isObject(val) && isObject(initMapDispatch[key])) {\n        val = mergeObjects(val, initMapDispatch[key])\n      }\n      if (this.props[key] !== val) {\n        this.props[key] = val\n        isChanged = true\n      }\n    })\n    if (isChanged) {\n      if (!this._dirty) {\n        this.prevProps = prevProps\n      }\n      this._unsafeCallUpdate = true\n      this.setState({}, () => {\n        delete this._unsafeCallUpdate\n      })\n    }\n  }\n\n  return function connectComponent (Component) {\n    // 将从redux而来的props从配置中剔除\n    const mapState = mapStateToProps(store.getState(), Component.defaultProps || {})\n    Component.properties && mapState && Object.keys(mapState).forEach(function (key) {\n      delete Component.properties[key]\n    })\n\n    let unSubscribe = null\n\n    return class Connect extends Component {\n      constructor (props, isPage) {\n        super(Object.assign(...arguments, mergeObjects(mapStateToProps(store.getState(), props), initMapDispatch)), isPage)\n        Object.keys(initMapDispatch).forEach(key => {\n          this[`__event_${key}`] = initMapDispatch[key]\n        })\n      }\n\n      _constructor () {\n        if (!this.$scope) {\n          if (super._constructor) {\n            super._constructor(this.props)\n          }\n          return\n        }\n        const store = getStore()\n        Object.assign(this.props, mergeObjects(mapStateToProps(store.getState(), this.props), initMapDispatch))\n        unSubscribe = store.subscribe(stateListener.bind(this))\n        if (super._constructor) {\n          super._constructor(this.props)\n        }\n      }\n\n      componentWillUnmount () {\n        if (super.componentWillUnmount) {\n          super.componentWillUnmount()\n        }\n        if (unSubscribe) {\n          unSubscribe()\n        }\n        unSubscribe = null\n      }\n    }\n  }\n}\n","export default class Provider {}\n","import Taro from '@tarojs/taro'\n\nexport const ReduxContext = Taro.createContext(null)\n","import { useContext } from '@tarojs/taro'\nimport { ReduxContext } from './context'\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport function useReduxContext () {\n  const contextValue = useContext(ReduxContext)\n\n  return contextValue\n}\n","import { useReduxContext } from './use-redux-context'\n\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport function useStore () {\n  const { store } = useReduxContext()\n  return store\n}\n","import { useStore } from './use-store'\n\n/**\n * A hook to access the redux `dispatch` function. Note that in most cases where you\n * might want to use this hook it is recommended to use `useActions` instead to bind\n * action creators to the `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useReduxDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\nexport function useDispatch () {\n  const store = useStore()\n  return store.dispatch\n}\n","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch (callback) {\n  callback()\n}\n\nlet batch = defaultNoopBatch\n\n// Allow injecting another batching function later\nexport const setBatch = newBatch => (batch = newBatch)\n\n// Supply a getter just to skip dealing with ESM bindings\nexport const getBatch = () => batch\n","import { getBatch } from './batch'\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nconst CLEARED = null\nconst nullListeners = { notify () {} }\n\nfunction createListenerCollection () {\n  const batch = getBatch()\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  let current = []\n  let next = []\n\n  return {\n    clear () {\n      next = CLEARED\n      current = CLEARED\n    },\n\n    notify () {\n      const listeners = (current = next)\n      batch(() => {\n        for (let i = 0; i < listeners.length; i++) {\n          listeners[i]()\n        }\n      })\n    },\n\n    get () {\n      return next\n    },\n\n    subscribe (listener) {\n      let isSubscribed = true\n      if (next === current) next = current.slice()\n      next.push(listener)\n\n      return function unsubscribe () {\n        if (!isSubscribed || current === CLEARED) return\n        isSubscribed = false\n\n        if (next === current) next = current.slice()\n        next.splice(next.indexOf(listener), 1)\n      }\n    }\n  }\n}\n\nexport default class Subscription {\n  constructor (store, parentSub) {\n    this.store = store\n    this.parentSub = parentSub\n    this.unsubscribe = null\n    this.listeners = nullListeners\n\n    this.handleChangeWrapper = this.handleChangeWrapper.bind(this)\n  }\n\n  addNestedSub (listener) {\n    this.trySubscribe()\n    return this.listeners.subscribe(listener)\n  }\n\n  notifyNestedSubs () {\n    this.listeners.notify()\n  }\n\n  handleChangeWrapper () {\n    if (this.onStateChange) {\n      this.onStateChange()\n    }\n  }\n\n  isSubscribed () {\n    return Boolean(this.unsubscribe)\n  }\n\n  trySubscribe () {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub\n        ? this.parentSub.addNestedSub(this.handleChangeWrapper)\n        : this.store.subscribe(this.handleChangeWrapper)\n\n      this.listeners = createListenerCollection()\n    }\n  }\n\n  tryUnsubscribe () {\n    if (this.unsubscribe) {\n      this.unsubscribe()\n      this.unsubscribe = null\n      this.listeners.clear()\n      this.listeners = nullListeners\n    }\n  }\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict'\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport default function invariant (condition, format, a, b, c, d, e, f) {\n  if (!condition) {\n    var error\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n          'for the full error message and additional helpful warnings.'\n      )\n    } else {\n      var args = [a, b, c, d, e, f]\n      var argIndex = 0\n      error = new Error(\n        format.replace(/%s/g, function () {\n          return args[argIndex++]\n        })\n      )\n      error.name = 'Invariant Violation'\n    }\n\n    error.framesToPop = 1 // we don't care about invariant's own frame\n    throw error\n  }\n}\n","import { useReducer, useRef, useMemo, useEffect } from '@tarojs/taro'\nimport { useReduxContext } from './use-redux-context'\nimport Subscription from '../utils/subscription'\nimport invariant from '../utils/invariant'\n\nconst refEquality = (a, b) => a === b\n\n/**\n * A hook to access the redux store's state. This hook takes a selector function\n * as an argument. The selector is called with the store state.\n *\n * This hook takes an optional equality comparison function as the second parameter\n * that allows you to customize the way the selected state is compared to determine\n * whether the component needs to be re-rendered.\n *\n * @param {Function} selector the selector function\n * @param {Function=} equalityFn the function that will be used to determine equality\n *\n * @returns {any} the selected state\n *\n * @example\n *\n * import React from 'react'\n * import { useSelector } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const counter = useSelector(state => state.counter)\n *   return <div>{counter}</div>\n * }\n */\nexport function useSelector (selector, equalityFn = refEquality) {\n  invariant(selector, `You must pass a selector to useSelectors`)\n\n  const { store, subscription: contextSub } = useReduxContext()\n  const [, forceRender] = useReducer(s => s + 1, 0)\n\n  const subscription = useMemo(() => new Subscription(store, contextSub), [\n    store,\n    contextSub\n  ])\n\n  const latestSubscriptionCallbackError = useRef()\n  const latestSelector = useRef()\n  const latestSelectedState = useRef()\n\n  let selectedState\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(store.getState())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    let errorMessage = `An error occured while selecting the store state: ${\n      err.message\n    }.`\n\n    if (latestSubscriptionCallbackError.current) {\n      errorMessage += `\\nThe error may be correlated with this previous error:\\n${\n        latestSubscriptionCallbackError.current.stack\n      }\\n\\nOriginal stack trace:`\n    }\n\n    throw new Error(errorMessage)\n  }\n\n  useEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useEffect(\n    () => {\n      function checkForUpdates () {\n        try {\n          const newSelectedState = latestSelector.current(store.getState())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender({})\n      }\n\n      subscription.onStateChange = checkForUpdates\n      subscription.trySubscribe()\n\n      checkForUpdates()\n\n      return () => subscription.tryUnsubscribe()\n    },\n    [store, subscription]\n  )\n\n  return selectedState\n}\n","import { getStore, setStore } from './utils/store'\nimport connect from './connect/connect'\nimport Provider from './connect/Provider'\nimport { useDispatch } from './hooks/use-dispatch'\nimport { useSelector } from './hooks/use-selector'\nimport { useStore } from './hooks/use-store'\nimport { ReduxContext } from './hooks/context'\n\nexport default {\n  connect,\n  Provider,\n  getStore,\n  setStore,\n  useDispatch,\n  useSelector,\n  useStore,\n  ReduxContext\n}\n\nexport {\n  connect,\n  Provider,\n  getStore,\n  setStore,\n  useDispatch,\n  useSelector,\n  useStore,\n  ReduxContext\n}\n"],"names":["store","appGlobal","global","globalRef","Object","getPrototypeOf","getStore","process","env","TARO_ENV","my","taroReduxStore","setStore","arg","isObject","Array","isArray","mergeObjects","obj1","obj2","result","assign","p","wrapPropsWithDispatch","mapDispatchToProps","dispatch","keys","reduce","props","key","actionCreator","connect","mapStateToProps","initMapDispatch","stateListener","isChanged","newMapState","getState","prevProps","forEach","val","_dirty","_unsafeCallUpdate","setState","connectComponent","Component","mapState","defaultProps","properties","unSubscribe","isPage","arguments","$scope","subscribe","bind","Provider","ReduxContext","Taro","createContext","useReduxContext","contextValue","useContext","useStore","useDispatch","defaultNoopBatch","callback","batch","getBatch","CLEARED","nullListeners","notify","createListenerCollection","current","next","clear","listeners","i","length","get","listener","isSubscribed","slice","push","unsubscribe","splice","indexOf","Subscription","parentSub","handleChangeWrapper","trySubscribe","onStateChange","Boolean","addNestedSub","invariant","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","refEquality","useSelector","selector","equalityFn","contextSub","subscription","useReducer","s","forceRender","useMemo","latestSubscriptionCallbackError","useRef","latestSelector","latestSelectedState","selectedState","err","errorMessage","message","stack","useEffect","checkForUpdates","newSelectedState","tryUnsubscribe"],"mappings":"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"}